1
00:00:01,410 --> 00:00:07,200
In this video we would like to emphasize that in certain occasions the order in which you join tables

2
00:00:07,200 --> 00:00:12,680
and ask you well matters let's invert the order of the tables.

3
00:00:12,680 --> 00:00:19,340
We will place the department's table in the left and the department manager table on the right

4
00:00:31,650 --> 00:00:37,910
rerun and ha a different output.

5
00:00:37,930 --> 00:00:40,910
This was due to our swapping the direction of the two tables.

6
00:00:40,930 --> 00:00:46,630
So now we will have all matching values from the two tables plus the department numbers from the department's

7
00:00:46,630 --> 00:00:51,770
dutiable that match no value from the department manager duplicate table.

8
00:00:51,860 --> 00:00:57,360
Therefore we can expect to see records for departments 1 10 and 11 right.

9
00:00:58,760 --> 00:00:59,850
OK.

10
00:01:00,030 --> 00:01:02,120
But why don't we see any of them.

11
00:01:03,940 --> 00:01:08,130
The answer lies in the way we've chosen the first selection in this query.

12
00:01:08,330 --> 00:01:13,350
After we inverted the order of the tables and executed the query the output changed.

13
00:01:13,430 --> 00:01:15,620
But that is not so obvious.

14
00:01:15,860 --> 00:01:21,380
To reorganize it properly please retrieve the department number data from the department's duplicate

15
00:01:21,380 --> 00:01:21,990
table.

16
00:01:22,160 --> 00:01:25,230
Not from the department manager duplicate table.

17
00:01:25,310 --> 00:01:29,960
The correct way to do that is to retrieve the first selection from the first table you have set and

18
00:01:29,960 --> 00:01:31,070
the JOIN syntax

19
00:01:33,610 --> 00:01:34,780
good.

20
00:01:34,810 --> 00:01:37,800
Now let's execute the query and check its output

21
00:01:42,970 --> 00:01:43,820
great.

22
00:01:43,870 --> 00:01:49,660
The picture is the opposite of the one the analysis just conducted referring to the Venn diagram.

23
00:01:49,660 --> 00:01:54,850
Imagine that with this query we swapped the places of the two tables.

24
00:01:54,880 --> 00:01:59,600
That's why in the results section we have only one nold department number value.

25
00:01:59,770 --> 00:02:05,130
And we have data about department one that has no information about an employee number.

26
00:02:05,140 --> 00:02:10,270
The latter is a consequence of the fact that we have no data about department number one in the manager

27
00:02:10,270 --> 00:02:11,050
table.

28
00:02:13,130 --> 00:02:14,100
All right.

29
00:02:14,150 --> 00:02:19,070
And because the department's table contains no information about the second department there will be

30
00:02:19,070 --> 00:02:21,690
no record about it in the resultset either.

31
00:02:23,810 --> 00:02:30,020
Finally as you scroll down you'll see information about all departments from three to nine with corresponding

32
00:02:30,020 --> 00:02:32,750
employee numbers and department names.

33
00:02:32,750 --> 00:02:38,840
At the end as you probably expected departments 10 and 11 are quoted with no information and the remaining

34
00:02:38,840 --> 00:02:41,020
two fields.

35
00:02:41,260 --> 00:02:43,310
This is all fantastic.

36
00:02:44,410 --> 00:02:48,490
Now let's examine a few syntactical peculiarities.

37
00:02:48,580 --> 00:02:51,540
We studied inner joints in the previous lessons.

38
00:02:51,550 --> 00:02:57,310
Why are they called that because the values in the output are common to the two tables and the resultset

39
00:02:57,430 --> 00:03:00,280
is in the inner part of the Venn diagram.

40
00:03:00,280 --> 00:03:03,180
It is the area where both circles overlap.

41
00:03:04,560 --> 00:03:11,670
So outer joins must exist to the LEFT JOIN falls in this category since in the output obtained you have

42
00:03:11,670 --> 00:03:18,390
data from the outer part of the Venn diagram to my point here is in this case you could also use the

43
00:03:18,390 --> 00:03:22,860
keywords left outer join and you will extract an identical result.

44
00:03:22,890 --> 00:03:29,460
Therefore if we rerun the query adding the keyword outer in the code the outcome will not differ from

45
00:03:29,460 --> 00:03:32,040
the one we obtained earlier.

46
00:03:32,100 --> 00:03:35,800
True absolutely.

47
00:03:35,810 --> 00:03:38,060
We obtained an identical result.

48
00:03:38,060 --> 00:03:44,450
Just remember that left join and left outer join are two interchangeable phrases from a professional

49
00:03:44,450 --> 00:03:45,350
perspective.

50
00:03:45,350 --> 00:03:51,800
There is no reason for typing the keyword outer here because if you are using a left join it will always

51
00:03:51,800 --> 00:03:54,590
be an outer type of join.

52
00:03:54,590 --> 00:03:57,610
This is like omitting the word Inner from inner join.

53
00:03:57,710 --> 00:03:59,210
If you remember.

54
00:03:59,210 --> 00:04:04,820
Therefore as long as it is clear what type of join will be applied it professionals prefer shorter phrases

55
00:04:05,450 --> 00:04:07,170
cool.

56
00:04:07,210 --> 00:04:10,870
There's one final interesting detail I'd like to add.

57
00:04:10,870 --> 00:04:15,880
Left Joines can deliver a list with all records from the left table that do not match any rows from

58
00:04:15,880 --> 00:04:16,970
the right table.

59
00:04:17,260 --> 00:04:18,320
Put differently.

60
00:04:18,370 --> 00:04:23,590
The idea is to obtain all records that appear only in the left outer blue part of the Venn diagram in

61
00:04:23,590 --> 00:04:24,590
this picture.

62
00:04:25,820 --> 00:04:27,140
Which are these records.

63
00:04:27,140 --> 00:04:27,830
In our case

64
00:04:44,840 --> 00:04:47,660
looking at the output obtained with the first left join.

65
00:04:47,780 --> 00:04:50,470
These are the top six rows of the data list.

66
00:04:50,570 --> 00:05:00,600
You see they have null values in the department name field and how do we get to these rows programmatically.

67
00:05:00,600 --> 00:05:03,200
The trick is to include a WHERE clause.

68
00:05:03,270 --> 00:05:10,150
His condition will be all department name values to be null.

69
00:05:10,400 --> 00:05:18,210
So you must type where department name is null through a left join.

70
00:05:18,230 --> 00:05:25,730
We will retrieve this bit of the table whose column information comes from the right table and is null.

71
00:05:25,790 --> 00:05:28,060
Makes sense when you think of it doesn't it.

72
00:05:29,240 --> 00:05:33,590
Let's execute the query and check if we will obtain a six row result.

73
00:05:35,810 --> 00:05:39,450
Bingo Yes can't be better.

74
00:05:39,680 --> 00:05:44,810
Now roll up your sleeves and have a go with the exercises attached to this lesson.

75
00:05:44,810 --> 00:05:46,300
See you in the next video.
