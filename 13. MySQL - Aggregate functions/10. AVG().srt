1
00:00:00,900 --> 00:00:07,540
Okay perfect the next function we'll consider is average abbreviated as Avi G.

2
00:00:07,650 --> 00:00:12,180
It extracts the average value of all non-null values in a field.

3
00:00:12,210 --> 00:00:17,260
Not surprisingly the queries structure is identical to the one employed for all aggregate functions.

4
00:00:17,280 --> 00:00:18,400
Up to this moment.

5
00:00:18,810 --> 00:00:21,110
Just remember to use the function name.

6
00:00:21,200 --> 00:00:28,740
G if you typed the entire word average for example the query won't work.

7
00:00:28,910 --> 00:00:35,800
All right let's calculate the average annual price of a contract in the employees database which is

8
00:00:35,800 --> 00:00:41,540
the same as asking ourselves which is the average annual salary that company's employee received

9
00:00:44,550 --> 00:00:45,260
OK.

10
00:00:46,840 --> 00:00:49,270
All we have to do is execute and

11
00:00:52,190 --> 00:00:53,420
here's the number.

12
00:00:53,420 --> 00:01:01,070
Approximately sixty three thousand seven hundred sixty one dollars and twenty cents this concludes the

13
00:01:01,070 --> 00:01:05,590
introduction of aggregate functions in my ask you Will.

14
00:01:05,640 --> 00:01:10,620
Please don't forget that aggregate functions can be applied to any group of data values within a certain

15
00:01:10,620 --> 00:01:12,130
column.

16
00:01:12,130 --> 00:01:17,050
This is another reason they are frequently used together with a group by clause.

17
00:01:17,100 --> 00:01:21,380
Are examples here did not contain queries long enough to include a group by block.

18
00:01:21,550 --> 00:01:25,890
We intended to present the aggregate functions without additional complexity.

19
00:01:25,930 --> 00:01:31,540
I promise you that later in the course we will look at more sophisticated examples involving aggregate

20
00:01:31,540 --> 00:01:32,780
functions.

21
00:01:32,860 --> 00:01:38,830
By the way it's a bit annoying to see four digits after the decimal point isn't it.

22
00:01:38,910 --> 00:01:44,250
You probably expect to see only two representing the number of cents in the price right.

23
00:01:44,280 --> 00:01:46,880
Maybe you wish you could around this value somehow.

24
00:01:47,250 --> 00:01:54,390
Yes you can in the next section we will show you how to do that and as well as several other operations

25
00:01:54,390 --> 00:01:56,820
that will help you work in as well.

26
00:01:56,820 --> 00:01:57,690
Thanks for watching.
